{"version":3,"sources":["iss.png","NavigationBar.js","Image.js","Homepage.js","DisplayPosition.js","WhereISS.js","questbank.js","QuestionBox.js","Results.js","Challenge.js","Sighting.js","Crew.js","Contact.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Item","exact","to","activeClassName","Component","Image","props","getImages","fetch","then","response","json","data","setState","copyright","date","title","explanation","url","isLoading","state","this","src","alt","React","Homepage","DisplayPosition","lat","lng","SimpleExample","getPosition","iss_position","latitude","longitude","tileLayer","tileLayer2","tileLayer3","zoom","setInterval","position","icon","L","iconUrl","require","iconSize","onClick","Map","center","TileLayer","Marker","Popup","width","height","scrolling","allowfullscreen","webkitallowfullscreen","frameborder","style","questionsFromQuestBank","QuestionBox","question","options","selected","useState","answer","setAnswer","map","text","index","key","Result","score","playAgain","Challenge","questions","responses","computeAnswer","correctAnswer","answers","correct","questionID","Sighting","navigator","geolocation","getCurrentPosition","coords","request","altitude","passes","datetime","passTimes","passTime","utcSeconds","risetime","Date","d","Number","m","Math","floor","s","secondsToMs","duration","Crew","getCrew","CrewInfos","people","info","biolink","target","name","countryflag","launchdate","Contact","Footer","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ccec3a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iss.f0ac4808.png\";","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport './NavigationBar.css';\n\n\nclass NavigationBar extends Component {\n    render(){\n        return (\n        <Navbar bg=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Code Life</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n\n            <Nav.Item>\n                <NavLink exact to=\"/\" activeClassName=\"d-inline p-2 text-white\">Homepage</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n                <NavLink exact to=\"/WhereISS\" activeClassName=\"d-inline p-2 text-white\">WhereISS</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n                <NavLink exact to=\"/Challenge\" activeClassName=\"d-inline p-2 text-white\">Challenge</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n                <NavLink exact to=\"/Sighting\" activeClassName=\"d-inline p-2 text-white\">Sighting</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n                <NavLink exact to=\"/Crew\" activeClassName=\"d-inline p-2 text-white\">Crew</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n                <NavLink exact to=\"/Contact\" activeClassName=\"d-inline p-2 text-white\">Contact</NavLink>\n            </Nav.Item>\n\n        </Nav>\n        </Navbar.Collapse>\n        </Navbar>\n   \n        )\n    }\n}\nexport default NavigationBar;","import React from 'react';\nimport './Image.css';\n\nclass Image extends React.Component {\n    constructor(props){\n    super(props); \n    this.state = {\n        copyright: '',\n        date:'',\n        title:'',\n        explanation: '',\n        url: '',\n        isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.getImages();\n    }\n\n\n    getImages = () => {\n        fetch ('https://api.nasa.gov/planetary/apod?api_key=DOJuuz8rSQdh6swCcE5Gk3NLsuMGNTBX8ubSheVQ')\n        .then (response => response.json())\n        .then (data => {\n            this.setState({\n                copyright:data.copyright,\n                date: data.date,\n                title: data.title,\n                explanation: data.explanation,\n                url: data.url,\n                isLoading: false,\n            })\n        })\n    }\n\n  \n    render () {\n\n        const { isLoading } = this.state;\n\n        if (isLoading) {\n            return (\n                <p>\n                    Loading\n                </p>\n            )\n        } \n        \n        return (\n            <div className=\"homepage\">\n                <div className=\"homepage-title\">\n                    <h1>Fly By</h1>\n                </div>\n                <div className=\"image-title\">\n                    <p>{this.state.title}</p>\n                </div>\n                <div className=\"image-picture\">\n                    <img src={this.state.url} alt='' />\n                </div>\n                <div className=\"image-infos\">\n                    <p>Copyright: {this.state.copyright}</p> \n                    <p>{this.state.date}</p>\n                    <p>{this.state.explanation}</p>\n                </div>\n            </div>\n        )\n    }\n};\n\n\nexport default Image","import React from 'react';\nimport Image from './Image.js'\n\nconst Homepage = () => (\n    <div>\n        <div>\n            <Image />\n        </div>\n    </div>\n);\n\nexport default Homepage;","import React from 'react';\n\nconst DisplayPosition = ({ lat, lng }) => {\n    return (\n        <div>\n            <p>Lat:{lat} Long:{lng}</p>\n           \n            \n           \n        </div>\n    )\n}\n\nexport default DisplayPosition;","\n\nimport React, { Component } from 'react'\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport './WhereISS.css';\nimport DisplayPosition from './DisplayPosition';\nimport L from 'leaflet';\n\n\nclass SimpleExample extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: 51.505,\n            lng: -0.09,\n            zoom: 2,\n            url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        }\n\n    }\n\n\n    getPosition = () => {\n        fetch('http://api.open-notify.org/iss-now.json')\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    lat: data.iss_position.latitude,\n                    lng: data.iss_position.longitude\n                })\n            })\n    }\n\n    componentDidMount() {\n        const fetchInfo = () => {\n            this.getPosition();\n        };\n        setInterval(fetchInfo, 8000);\n    }\n\n    tileLayer = () => {\n\n        this.setState({ url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}' })\n    }\n    tileLayer2 = () => {\n        this.setState({ url: 'https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png' })\n    }\n\n    tileLayer3 = () => {\n        this.setState({ url: 'https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png' })\n\n    }\n\n    \n\n    render() {\n        const position = [this.state.lat, this.state.lng];\n\n        let icon = L.icon({\n            iconUrl: require('./iss.png'),\n            iconSize: [64, 64],\n        });\n\n       \n\n        return (\n            <div className=\"background\">\n                <h1 className=\"wheretitle\">Where is ISS right now?</h1>\n\n                <div className=\"Where\">\n\n                    <div className=\"buttons\">\n\n                        <div>\n                            <button onClick={this.tileLayer}>\n                                <img src=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" alt=\"\" />\n                            </button>\n                        </div>\n                        <div>\n                            <button onClick={this.tileLayer2}>\n                                <img src=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\" alt='' />\n                            </button>\n                        </div>\n                        <div>\n                            <button onClick={this.tileLayer3}>\n                                <img src='https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png' alt='' />\n                            </button>\n                        </div>\n                        \n                    </div>\n\n\n                    <div className=\"map\">\n\n                        <DisplayPosition className=\"display\" lat={this.state.lat} lng={this.state.lng} />\n                        <Map className=\"map1\" center={{ lat: this.state.lat, lng: this.state.lng }}\n                            zoom={this.state.zoom}>\n                            <TileLayer\n                                \n\n                                url={this.state.url}\n                            />\n                            <Marker position={position} icon={icon}>\n\n                                <Popup>\n                                    ISS <br />Real Time\n                            </Popup>\n                            </Marker>\n\n                        </Map>\n\n                    </div>\n\n                    <div className=\"video\">\n                        <p>Live Stream from ISS (sound and image)</p>\n                        <iframe width=\"360\" height=\"270\" src=\"https://ustream.tv/embed/9408562?autoplay=true\" scrolling=\"no\" allowfullscreen webkitallowfullscreen frameborder=\"0\" style={{ \"border\": \"none\" }} title=\"iss\"></iframe>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default SimpleExample ","const questionsFromQuestBank =   \n[ \n    {\n        \"question\": \"When was the ISS launched?\",\n        \"answers\": [\"1984\", \"1986\", \"2019\", \"2018\"],\n        \"correct\": \"1984\",\n        \"questionID\": \"75846\" \n    },\n    {\n        \"question\": \"What is the color of Earth?\",\n        \"answers\": [\"green\", \"blue\", \"red\", \"yellow\"],\n        \"correct\": \"blue\",\n        \"questionID\": \"90856\" \n    },\n    {\n        \"question\": \"When was the first step on the moon?\",\n        \"answers\": [\"1932\", \"1995\", \"1969\", \"2000\"],\n        \"correct\": \"1969\",\n        \"questionID\": \"45636\" \n    },\n    {\n        \"question\": \"How many countries participate in ISS?\",\n        \"answers\": [\"15\", \"9\", \"22\", \"10\"],\n        \"correct\": \"15\",\n        \"questionID\": \"64756\" \n    },\n    {\n        \"question\": \"How many times a day does ISS orbit the Earth?\",\n        \"answers\": [\"8\", \"34\", \"16\", \"25\"],\n        \"correct\": \"16\",\n        \"questionID\": \"90382\" \n    }\n]\n\nexport default questionsFromQuestBank;\n\n\n\n","import React, { useState } from 'react';\n\nconst QuestionBox = ({ question, options, selected }) => { \n    const [answer, setAnswer] = useState(options);\n    return (\n        <div className=\"questionBox\">\n            <div className=\"question\">{question}</div>\n            {answer.map( (text, index) => (\n                    <button\n                        key={index}\n                        className=\"answerBtn\"\n                        onClick={() => {\n                            setAnswer([text]);\n                            selected(text);\n                        }}\n                    >\n                        {text}\n                    </button>\n                ))}\n        </div>\n\n    );\n};\n\nexport default QuestionBox;\n","import React from 'react';\n\nconst Result = ({ score, playAgain }) => (\n    <div className=\"score-board\">\n        <div className=\"score\">You scored {score} / 5 correct answers!</div>\n        <button className=\"playBtn\" onClick={playAgain}>\n            Play again!\n        </button>\n    </div>\n);\n\nexport default Result;","import React from 'react';\nimport './Challenge.css';\nimport questionsFromQuestBank from './questbank.js';\nimport QuestionBox from './QuestionBox.js';\nimport Result from './Results.js';\n\nclass Challenge extends React.Component {\n    state = {\n        questions: questionsFromQuestBank,\n        score: 0,\n        responses: 0,\n    };\n\n    computeAnswer = (answer, correctAnswer) => {\n        if (answer === correctAnswer) {\n            this.setState({\n                score: this.state.score + 1\n            });\n        }\n        this.setState({\n            responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n        });\n    }\n    playAgain = () => {\n        this.setState({\n            score: 0,\n            responses: 0,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"challenge-container\">\n                <div className=\"challenge-title\">Challenge</div>\n                    {this.state.responses < 5 && \n                        this.state.questions.map (\n                        ({ question, answers, correct, questionID }) => (\n                            <QuestionBox \n                                question={question} \n                                options={answers} \n                                key={questionID}\n                                selected={answer => this.computeAnswer(answer, correct)}\n                            />\n                        )\n                )}\n\n                {this.state.responses === 5 ? (\n                    <Result score={this.state.score} playAgain={this.playAgain} />\n                ) : null}\n            </div>\n        );\n    }\n}\n\n\nexport default Challenge;","import React from 'react';\nimport './Sighting.css';\n\nclass Sighting extends React.Component {\n    constructor(props){\n        super(props); \n        this.state = {\n            lng: '',\n            lat: '',  \n            altitude: '',\n            passes: '',\n            datetime: '',\n            passTimes: [],\n            isLoading: true     \n        }\n    }\n\n    componentDidMount() {\n        this.getPosition();\n    }\n\n\n    getPosition = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                lng: position.coords.longitude,\n                lat: position.coords.latitude,\n            })\n            \n            fetch (`https://cors-anywhere.herokuapp.com/http://api.open-notify.org/iss-pass.json?lat=${this.state.lat }&lon=${this.state.lng }`)\n                .then (response => response.json())\n                .then (data => {\n                    this.setState({\n                        lng:data.request.longitude,\n                        lat: data.request.latitude,\n                        altitude: data.request.altitude,\n                        passes: data.request.passes,\n                        datetime: data.request.datetime,\n                        passTimes: data.response,\n                        isLoading: false                    \n                    })\n                }) \n        });\n    }\n\n    render () {\n        const { passTimes, isLoading } = this.state;\n\n        if (isLoading) {\n            return (\n                <p>\n                    Loading\n                </p>\n            )\n        } \n\n        const formatRisetime = (utcSeconds) => {\n            const date = new Date(utcSeconds * 1000);\n                return '' + date;\n        }\n\n        const secondsToMs = (d) => {\n            d = Number(d);\n            let m = Math.floor(d % 3600 / 60);\n            let s = Math.floor(d % 3600 % 60);\n        \n            let mDisplay = m > 0 ? m + (m === 1 ? \" minute, \" : \" minutes, \") : \"\";\n            let sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\";\n            return mDisplay + sDisplay; \n        }\n\n\n        return (\n            <div className=\"sighting\">\n                <div className=\"sighting-title\">\n                    <h1>Sighting Opportunities</h1>\n                </div>\n                <div className=\"sighting-infos\">\n                    <div>\n                        {passTimes.map((passTime) => {\n                            return (\n                                <div>\n                                    {formatRisetime(passTime.risetime)} <span>{secondsToMs(passTime.duration)}</span>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>      \n            </div>\n        )\n    }\n};\n\nexport default Sighting;\n","import React, { Component } from 'react';\nimport './Crew.css';\n\n\nclass Crew extends Component {\n   constructor(props) {\n       super(props);\n       this.state = {\n        //    name: '',\n        //    biophoto: '',\n        //    biophotowidth: '',\n        //    biophotoheight: '',\n        //    country: '',\n        //    countryflag: '',\n        //    launchdate: '',\n        //    title: '',\n        //    biolink: '',\n           CrewInfos: [],\n           isLoading: true       \n       };\n   }\n   \n\n   componentDidMount() {\n    this.getCrew();\n}\n   \n   getCrew = () => {\n       fetch('https://cors-anywhere.herokuapp.com/https://www.howmanypeopleareinspacerightnow.com/peopleinspace.json')\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                // name: data.people.name,\n                // biophoto: data.people.biophoto,\n                // biophotowidth: data.people.biophotowidth,\n                // biophotoheight: data.people.biophotoheight,\n                // country: data.people.country,\n                // countryflag: data.people.countryflag,\n                // launchdate: data.people.launchdate,\n                // title: data.people.title,\n                // biolink: data.people.biolink,\n                CrewInfos: data.people,\n                isLoading: false\n\n            });\n        });\n   }   \n   \n   \n   \n   \n    render() {\n        const { CrewInfos, isLoading } = this.state;\n\n        if (isLoading) {\n            return (\n                <p>Loading</p>\n            )\n        }\n    return (\n            <div className=\"Crew\">\n                    <div className=\"CrewTitle\">\n                        <h1>Crew</h1>\n                    </div>\n                    <div className=\"CrewList\">\n                        <div className=\"listing\"> \n                            {CrewInfos.map((info) =>  (\n                                <div>\n                                    <div className=\"Infos\">\n                                        <a href={info.biolink} target=\"_blank\"> \n                                        {/* <img src={info.biophoto} height={info.biophotoheight} width={info.biophotowidth} className=\"biopic\" /> */}\n                                        <h2>{info.name}</h2>\n                                        {/* {info.country} */}\n                                        <img src={info.countryflag} className=\"flag\" />\n                                        <h3>{info.title}</h3> \n                                        </a>\n                                    </div>\n                                    <div className=\"Days\">\n                                        <p>Since</p>\n                                        <h4>{info.launchdate}</h4>\n                                        <p>In Space</p>\n                                    </div>\n                                </div>\n                                \n                             ) )} \n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\nexport default Crew;\n","import React from 'react';\n\nconst Contact = () => (\n    <>\n        <h1>Contact</h1>\n        <h1>About us</h1>\n    </>\n);\n\n\nexport default Contact;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Footer.css';\n\nconst Footer = () => (\n\n    <>\n        <div className=\"footer\">\n            <ul className=\"contact\">\n                <li><NavLink exact to=\"/Contact\" >Contact</NavLink></li>\n                <li><NavLink exact to=\"/Contact\" >About us</NavLink></li>\n            </ul>\n            <ul className=\"social\">\n                <li><a href=\"#\"><img src=\"https://image.flaticon.com/icons/png/512/87/87390.png\" alt=\"\"></img></a></li>\n                <li><a href=\"#\"><img src=\"https://image.flaticon.com/icons/png/512/59/59439.png\" alt=\"\"></img></a></li>\n            </ul>\n        </div>\n    </>\n);\n\n\nexport default Footer;","import React from 'react';\nimport { Switch, BrowserRouter, Route } from 'react-router-dom';\nimport NavigationBar from './NavigationBar.js';\nimport Homepage from './Homepage.js';\nimport SimpleExample from './WhereISS.js';\nimport Challenge from './Challenge.js';\nimport Sighting from './Sighting.js';\nimport Crew from './Crew.js';\nimport Contact from './Contact.js';\nimport Footer from './Footer.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      \n      <NavigationBar />\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route exact path=\"/WhereISS\" component={SimpleExample} />\n        <Route exact path=\"/Challenge\" component={Challenge} />\n        <Route exact path=\"/Sighting\" component={Sighting} />\n        <Route exact path=\"/Crew\" component={Crew} />\n        <Route exact path=\"/Contact\" component={Contact} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n\n\n\n  );\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}